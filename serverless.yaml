service: NouriMeals-API

frameworkVersion: ">=1.1.0 <2.0.0"

plugins:
  - serverless-dynamodb-local
  - serverless-offline
custom:
  dynamodb:
    stages:
      - dev
    start:
      port: 8000
      migrate: true
      inMemory: false
      dbPath: "../nouri-serverless"

provider:
  name: aws
  runtime: nodejs12.x
  region: us-west-2
  environment:
    DYNAMODB_TABLE: "${self:service}-${opt:stage, self:provider.stage}"
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Scan
        - dynamodb:Query
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE}"

package:
  include:
  - src/node_modules/argon2/**

functions:
  createUser:
    handler: src/functions/createUser.createUser
    events:
      - http:
          method: post
          cors: true
          path: /user
          request:
            schema:
              application/json: "${file(src/schema/create_user_request.json)}"
  getAllUsers:
    handler: src/functions/getAllUsers.getAllUsers
    events:
      - http:
          method: get
          cors: true
          path: /users
  getUsersPerCity:
    handler: src/functions/getUsersPerCity.getUsersPerCity
    events:
      - http:
          method: get
          cors: true
          path: "/users/{city}"         
  getUser:
    handler: src/functions/getUser.getUser
    events:
      - http:
          method: get
          cors: true
          path: "/user"
  updateUser:
    handler: src/functions/updateUser.updateUser
    events:
      - http:
          method: put
          cors: true
          path: "/user"
  deleteUser:
    handler: src/functions/deleteUser.deleteUser
    events:
      - http:
          method: delete
          cors: true
          path: "/user"


resources:
  Resources:
    userTable:
      Type: AWS::DynamoDB::Table
      DeletionPolicy: Retain
      Properties:
        TableName: "${self:provider.environment.DYNAMODB_TABLE}"
        AttributeDefinitions:
            - AttributeName: "city"
              AttributeType: "S"
            - AttributeName: "username"
              AttributeType: "S" 
        KeySchema:
            - AttributeName: "city"
              KeyType: "HASH"
            - AttributeName: "username"
              KeyType: "RANGE"
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1